#######################
#POSTGRESQL properties
#docker command to run postgres:
#docker run --name dbs-order -e POSTGRES_USER=admin -e POSTGRES_PASSWORD=admin123 -e POSTGRES_DB=order -p 5484:5432 -d postgres
#######################
#spring.datasource.url=jdbc:postgresql://localhost:5484/order?useSSL=false&characterEncoding=UTF-8
#spring.datasource.username=admin
#spring.datasource.password=admin123
spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST}/${POSTGRES_DB}?useSSL=false&characterEncoding=UTF-8
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}
#look closer (increment value is set to 50 by hibernate, so custom sequence also need that value
#hibernate.id.new_generator_mappings=true

# Show or not log for each sql query
#spring.jpa.show-sql=true

#org.hibernate.SQL   - set to debug to log all SQL DML statements as they are executed
#log4j.logger.org.hibernate.SQL=debug
#org.hibernate.type - set to trace to log all JDBC parameters
#log4j.logger.org.hibernate.type=trace

# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL82Dialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.datasource.initialization-mode=always

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
#spring.queries.users-query=select email, password, active from appuser where email=?
#spring.queries.roles-query=select u.email, r.role from appuser u inner join appuser_role ar on(u.id=ar.appuser_id) inner join role r on(ar.role_id=r.id) where u.email=?

#######################
#APPLICATION properties
#######################
server.port=8884
logging.level.com.pulawskk.dbsorder.service=debug
spring.application.name=dbs-order

management.endpoints.web.exposure.include=health, info, beans, conditions, configprops, env
management.endpoint.health.show-details=ALWAYS

eureka.client.service-url.defaultZone=${EUREKA_HOST}

#######################
#JMS properties
#######################
#https://github.com/vromero/activemq-artemis-docker
#run docker image: docker run -d -e ARTEMIS_USERNAME=myuser -e ARTEMIS_PASSWORD=password -p 8161:8161 -p 61616:61616 vromero/activemq-artemis
spring.artemis.user=myuser
spring.artemis.password=password
spring.artemis.host=${JMS_HOST}
